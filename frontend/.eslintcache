[{"C:\\Users\\skada\\online-shop\\frontend\\src\\index.js":"1","C:\\Users\\skada\\online-shop\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\skada\\online-shop\\frontend\\src\\App.js":"3","C:\\Users\\skada\\online-shop\\frontend\\src\\Screens\\HomeScreen.js":"4","C:\\Users\\skada\\online-shop\\frontend\\src\\Screens\\ProductScreen.js":"5","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProductScreen.js":"6","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\HomeScreen.js":"7","C:\\Users\\skada\\online-shop\\frontend\\src\\store.js":"8","C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\productReducers.js":"9","C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\productConstants.js":"10","C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\productActions.js":"11","C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\cartReducers.js":"12","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\CartScreen.js":"13","C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\cartConstants.js":"14","C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\cartActions.js":"15","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\SigninScreen.js":"16","C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\userReducers.js":"17","C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\userConstants.js":"18","C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\userActions.js":"19","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\RegisterScreen.js":"20","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\LoadingBox.js":"21","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\MessageBox.js":"22","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\CheckoutSteps.js":"23","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\PaymentMethodScreen.js":"24","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\PlaceOrderScreen.js":"25","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ShippingAddressScreen.js":"26","C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\orderReducers.js":"27","C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\orderConstants.js":"28","C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\orderActions.js":"29","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\OrderScreen.js":"30","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\OrderHistoryScreen.js":"31","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProfileScreen.js":"32","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\PrivateRoute.js":"33","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProductListScreen.js":"34","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\AdminRoute.js":"35","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProductEditScreen.js":"36","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\OrderListScreen.js":"37","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\SearchBox.js":"38","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\Product.js":"39","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\SearchScreen.js":"40","C:\\Users\\skada\\online-shop\\frontend\\src\\utils.js":"41","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\Rating.js":"42","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\SellerScreen.js":"43","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\SellerRoute.js":"44","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\UserListScreen.js":"45","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\UserEditScreen.js":"46"},{"size":671,"mtime":1608758883957,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":499162500000,"results":"49","hashOfConfig":"48"},{"size":9972,"mtime":1612215916135,"results":"50","hashOfConfig":"48"},{"size":1207,"mtime":1608166648650,"results":"51","hashOfConfig":"48"},{"size":2036,"mtime":1608080962880,"results":"52","hashOfConfig":"48"},{"size":8958,"mtime":1611970944980,"results":"53","hashOfConfig":"48"},{"size":1292,"mtime":1612214062616,"results":"54","hashOfConfig":"48"},{"size":2345,"mtime":1612214062623,"results":"55","hashOfConfig":"48"},{"size":4175,"mtime":1612137708759,"results":"56","hashOfConfig":"48"},{"size":1668,"mtime":1611970944983,"results":"57","hashOfConfig":"48"},{"size":5291,"mtime":1612137708758,"results":"58","hashOfConfig":"48"},{"size":1218,"mtime":1610576794028,"results":"59","hashOfConfig":"48"},{"size":3867,"mtime":1612137708755,"results":"60","hashOfConfig":"48"},{"size":283,"mtime":1610550775874,"results":"61","hashOfConfig":"48"},{"size":1308,"mtime":1610397231142,"results":"62","hashOfConfig":"48"},{"size":2351,"mtime":1610634754550,"results":"63","hashOfConfig":"48"},{"size":3880,"mtime":1612214062622,"results":"64","hashOfConfig":"48"},{"size":1548,"mtime":1612214062620,"results":"65","hashOfConfig":"48"},{"size":5632,"mtime":1612214062620,"results":"66","hashOfConfig":"48"},{"size":3340,"mtime":1612214062617,"results":"67","hashOfConfig":"48"},{"size":217,"mtime":1610237774384,"results":"68","hashOfConfig":"48"},{"size":215,"mtime":1610237774384,"results":"69","hashOfConfig":"48"},{"size":451,"mtime":1610376702093,"results":"70","hashOfConfig":"48"},{"size":2209,"mtime":1610400533327,"results":"71","hashOfConfig":"48"},{"size":5913,"mtime":1610577812145,"results":"72","hashOfConfig":"48"},{"size":4077,"mtime":1610635387626,"results":"73","hashOfConfig":"48"},{"size":3669,"mtime":1611586229854,"results":"74","hashOfConfig":"48"},{"size":1447,"mtime":1611586229854,"results":"75","hashOfConfig":"48"},{"size":5563,"mtime":1611586229853,"results":"76","hashOfConfig":"48"},{"size":8548,"mtime":1611586229851,"results":"77","hashOfConfig":"48"},{"size":2563,"mtime":1611023160777,"results":"78","hashOfConfig":"48"},{"size":4826,"mtime":1611586229852,"results":"79","hashOfConfig":"48"},{"size":571,"mtime":1611181799142,"results":"80","hashOfConfig":"48"},{"size":5473,"mtime":1612137708757,"results":"81","hashOfConfig":"48"},{"size":589,"mtime":1611459784318,"results":"82","hashOfConfig":"48"},{"size":7676,"mtime":1611459784317,"results":"83","hashOfConfig":"48"},{"size":3456,"mtime":1612216446635,"results":"84","hashOfConfig":"48"},{"size":763,"mtime":1611603778688,"results":"85","hashOfConfig":"48"},{"size":921,"mtime":1611866912573,"results":"86","hashOfConfig":"48"},{"size":6547,"mtime":1612137708758,"results":"87","hashOfConfig":"48"},{"size":579,"mtime":1611866912579,"results":"88","hashOfConfig":"48"},{"size":2207,"mtime":1611866912574,"results":"89","hashOfConfig":"48"},{"size":2637,"mtime":1611970944981,"results":"90","hashOfConfig":"48"},{"size":551,"mtime":1611970944982,"results":"91","hashOfConfig":"48"},{"size":3516,"mtime":1612214062619,"results":"92","hashOfConfig":"48"},{"size":3947,"mtime":1612214062618,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"wpy8f0",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"96"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"96"},"C:\\Users\\skada\\online-shop\\frontend\\src\\index.js",[],["199","200"],"C:\\Users\\skada\\online-shop\\frontend\\src\\reportWebVitals.js",[],["201","202"],"C:\\Users\\skada\\online-shop\\frontend\\src\\App.js",["203"],"C:\\Users\\skada\\online-shop\\frontend\\src\\Screens\\HomeScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\Screens\\ProductScreen.js",[],["204","205"],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\HomeScreen.js",["206"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts } from '../actions/productActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Product from '../components/Product';\r\n\r\nfunction HomeScreen() {\r\n\r\n  const productList = useSelector(state => state.productList);\r\n  const { loading, error, products } = productList;\r\n const dispatch = useDispatch();\r\n  useEffect(() => {    \r\n    dispatch(listProducts({}));   \r\n  }, [dispatch]);\r\n    return (  \r\n      <div>\r\n          {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <>\r\n          { products.length === 0 &&  <MessageBox>No Product Found</MessageBox> }\r\n            <div className=\"row center\">\r\n                {products.map((product) => (\r\n              <Product key={product._id} product={product}></Product>\r\n              ))}\r\n            </div>            \r\n        </>\r\n      )}\r\n      </div>\r\n         \r\n    )\r\n}\r\nexport default HomeScreen;","C:\\Users\\skada\\online-shop\\frontend\\src\\store.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\productActions.js",["207"],"import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS,\r\n     PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, \r\n     PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_SUCCESS,\r\n     PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL,\r\n     PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_FAIL, PRODUCT_REVIEW_CREATE_REQUEST, PRODUCT_REVIEW_CREATE_SUCCESS, PRODUCT_REVIEW_CREATE_FAIL} from \"../constants/productConstants\"\r\n\r\nimport Axios from \"axios\";\r\n\r\nexport const listProducts = ({\r\n    pageNumber = '',\r\n    name='',\r\n    category= '',\r\n    seller= '',\r\n    min= 0,\r\n    max= 0,\r\n    rating = 0,\r\n    order =''\r\n}) =>  async (dispatch) => {\r\n    try{\r\n        dispatch({type:PRODUCT_LIST_REQUEST});\r\n        const { data } = await Axios.get(`/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\r\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\r\n    }\r\n    catch(error){\r\n        const message =\r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: PRODUCT_LIST_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const listProductCategories = () =>  async (dispatch) => {\r\n    try{\r\n        dispatch({type:PRODUCT_CATEGORY_LIST_REQUEST});\r\n        const { data } = await Axios.get(`/api/products/categories`);\r\n        dispatch({type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data});\r\n    }\r\n    catch(error){\r\n        const message =\r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: PRODUCT_CATEGORY_LIST_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\r\n        const { data } = await Axios.get(`/api/products/${productId}`);\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\r\n    } \r\n    catch (error) {\r\n        const message =\r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: message });\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    dispatch({type: PRODUCT_CREATE_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n    try {\r\n        const { data } = await Axios.post('/api/products',\r\n        {},\r\n        {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n        dispatch({type: PRODUCT_CREATE_SUCCESS, payload: data.product});\r\n    } catch(error) {\r\n        const message =\r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: PRODUCT_CREATE_FAIL, payload: message});\r\n    }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    dispatch({type: PRODUCT_UPDATE_REQUEST, payload: product});\r\n    const { userSignin: { userInfo }} = getState();\r\n    try {\r\n        const { data } = await Axios.put(`/api/products/${product._id}`, product, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        console.log(\"data: \"+data);\r\n        dispatch({type: PRODUCT_UPDATE_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message =\r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: PRODUCT_UPDATE_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const deleteProduct  = (productId) => async (dispatch, getState) => {\r\n    dispatch({type: PRODUCT_DELETE_REQUEST, payload: productId});\r\n    const { userSignin: { userInfo}} = getState();\r\n    console.log(\"userInfo:\"+ userInfo);\r\n    try {\r\n        const { data } = await Axios.delete(`/api/products/${productId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n        dispatch({type: PRODUCT_DELETE_SUCCESS});\r\n    } catch (error) {\r\n        const message =\r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: PRODUCT_DELETE_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const createReview = (productId, review) => async (dispatch, getState) => {\r\n    dispatch({type: PRODUCT_REVIEW_CREATE_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n    try {\r\n        const { data } = await Axios.post(`/api/products/${productId}/reviews`,\r\n        review,\r\n        {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n        dispatch({type: PRODUCT_REVIEW_CREATE_SUCCESS, payload: data.product});\r\n    } catch(error) {\r\n        const message =\r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: PRODUCT_REVIEW_CREATE_FAIL, payload: message});\r\n    }\r\n};\r\n","C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\SigninScreen.js",["208"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { signin } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nfunction SigninScreen(props) {    \r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const userSignin = useSelector(state => state.userSignin );\r\n    const { loading, userInfo, error} = userSignin;\r\n\r\n    const dispatch = useDispatch();\r\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            props.history.push(redirect);\r\n        }\r\n        return () => {\r\n            //\r\n        };\r\n    }, [userInfo]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin(email, password));\r\n    }\r\n\r\n    return <div>\r\n        <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h2>Sign-In</h2>\r\n                </div>\r\n                    {loading && <LoadingBox></LoadingBox>}\r\n                    {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                <div>\r\n                    <label htmlFor=\"email\">\r\n                        Email\r\n                    </label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={ (e) => setEmail(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">\r\n                        Password\r\n                    </label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"button primary\" >Signin</button>\r\n                </div>\r\n                <div>\r\n                    New to online-shop?\r\n                </div>\r\n                <div>\r\n                    <Link to={`/register?redirect=${redirect}`} className=\"button secondary text-center\">Register</Link>\r\n                </div>            \r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default SigninScreen;","C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\userReducers.js",["209"],"import { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNOUT, \r\n    USER_DETAILS_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_SUCCESS, \r\n    USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET} from '../constants/userConstants';\r\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL} from '../constants/userConstants';\r\n\r\nfunction userSigninReducer(state={}, action) {\r\n    switch(action.type) {\r\n        case USER_SIGNIN_REQUEST:\r\n            return { loading: true};\r\n        case USER_SIGNIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload};\r\n        case USER_SIGNIN_FAIL:\r\n            return { loading: false, error: action.payload};\r\n        case USER_SIGNOUT:\r\n            return {};\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction userRegisterReducer(state={}, action) {\r\n    switch(action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true};\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload};\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload};\r\n            default: return state;\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state= {loading: true}, action) => {\r\n    switch(action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { loading: true};\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload};\r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload };\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateProfileReducer = ( state ={}, action) => {\r\n    switch(action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true};\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true};\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { userSigninReducer, userRegisterReducer }","C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\RegisterScreen.js",["210","211"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { register } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nfunction RegisterScreen(props) {\r\n    \r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rePassword, setRePassword] = useState('');\r\n\r\n    const userRegister = useSelector(state => state.userRegister );\r\n    const { loading, userInfo, error} = userRegister;\r\n console.log(\"RegisterScreen:    loading : \"+ userRegister, userInfo + \" ***********\");\r\n    const dispatch = useDispatch();\r\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            props.history.push(redirect);\r\n        }        \r\n    }, [props.history, redirect, userInfo]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(password !== rePassword) {\r\n            alert('Password and Re-Enter Password does not match');\r\n        } else {\r\n            dispatch(register(name, email, password));\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h2>Create Account</h2>\r\n                </div>                 \r\n                    {loading && <LoadingBox></LoadingBox>}\r\n                    {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                <div>\r\n                    <label htmlFor=\"name\">\r\n                        Name\r\n                    </label>\r\n                    <input type=\"text\" name=\"name\" id=\"name\" onChange={ (e) => setName(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"email\">\r\n                        Email\r\n                    </label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={ (e) => setEmail(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">\r\n                        Password\r\n                    </label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"rePassword\">\r\n                        Re-Enter Password\r\n                    </label>\r\n                    <input type=\"rePassword\" name=\"rePassword\" id=\"rePassword\" onChange={(e) => setRePassword(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"button primary\" >Register</button>\r\n                </div>\r\n                <div>\r\n                    Already have an account?                \r\n                    <Link to={`/signin?redirect=${redirect}`} className=\"button secondary text-center\">Sign-in</Link>\r\n                </div>            \r\n        </form>\r\n    </div>\r\n}\r\nexport default RegisterScreen;","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\LoadingBox.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\components\\MessageBox.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\PaymentMethodScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ShippingAddressScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\orderActions.js",["212"],"import Axios from \"axios\";\r\nimport { CART_EMPTY } from \"../constants/cartConstants\";\r\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL\r\n    , ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\r\n     ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL,\r\n     ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,\r\n     ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL,\r\n     ORDERS_LIST_REQUEST, ORDERS_LIST_SUCCESS, ORDERS_LIST_FAIL,\r\n     ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL } from '../constants/orderConstants';\r\n\r\nexport const createOrder = (order ) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_CREATE_REQUEST, payload: order});\r\n    try {\r\n        const { userSignin: {userInfo}} = getState();\r\n        console.log(\"order, order action: \"+ order, userInfo.token);\r\n        const { data } = await Axios.post('/api/orders',order, {\r\n            headers: {\r\n                'Authorization': `Bearer ${userInfo.token}`,\r\n            }, \r\n        });\r\n        console.log(\"order data: \"+ data);\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\r\n        dispatch({ type: CART_EMPTY});\r\n        localStorage.removeItem('cartItems');\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_DETAILS_REQUEST, payload: orderId});\r\n    const { userSignin: {userInfo}} = getState();\r\n    console.log(\"userInfo: \"+ userInfo);\r\n    try {\r\n        const { data } = await Axios.get(`/api/orders/${orderId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n        dispatch({type: ORDER_DETAILS_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({type: ORDER_DETAILS_FAIL, payload: message});\r\n    }\r\n};\r\n\r\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_PAY_REQUEST, payload: {order, paymentResult}});\r\n    const { userSignin: { userInfo }} = getState();\r\n    try {\r\n        const { data } = await Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({type: ORDER_PAY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({type: ORDER_PAY_FAIL, payload: message});\r\n    }\r\n};\r\n\r\nexport const listOrder = () => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_LIST_REQUEST});\r\n    const { userSignin: {userInfo}} = getState();\r\n    try {\r\n        const { data } = await Axios.get('/api/orders/user', {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({type: ORDER_LIST_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({type: ORDER_LIST_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async ( dispatch, getState ) => {\r\n    dispatch({ type: ORDERS_LIST_REQUEST});\r\n    const { userSignin: { userInfo }} = getState();\r\n    try {\r\n        const { data } = await Axios.get('/api/orders', {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n        dispatch({type: ORDERS_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({type: ORDERS_LIST_FAIL, message});\r\n    }\r\n}\r\n\r\nexport const deleteOrder = (orderId) => async ( dispatch, getState) => {\r\n    dispatch({ type: ORDER_DELETE_REQUEST})\r\n    const { userSignin: { userInfo }} = getState();    \r\n    try {\r\n        const { data } = await Axios.delete(`/api/orders/${orderId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n        dispatch({ type: ORDER_DELETE_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n            dispatch({type: ORDER_DELETE_FAIL});\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_DELIVER_REQUEST, payload: {orderId}});\r\n    const { userSignin: { userInfo }} = getState();\r\n\r\n    try {\r\n        const { data } = await Axios.put(`/api/orders/${orderId}/deliver`, {}, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({type: ORDER_DELIVER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({type: ORDER_DELIVER_FAIL, payload: message});\r\n    }\r\n};\r\n","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\OrderScreen.js",["213"],"import Axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { detailsOrder, payOrder, deliverOrder } from '../actions/orderActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET } from '../constants/orderConstants';\r\n\r\nexport default function OrderScreen(props) {\r\n    const orderId = props.match.params.id;\r\n    const [sdk, setSdk] = useState(false);\r\n    const orderDetails = useSelector((state) => state.orderDetails);\r\n    const { order, loading, error} = orderDetails;\r\n    \r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const orderPay = useSelector(state => state.orderPay);\r\n    const { loading: loadingPay, error: errorPay, success: successPay} = orderPay;\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver);\r\n    const { loading: loadingDeliver, error: errorDeliver, success: successDeliver} = orderDeliver\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        const addPayPalScript = async () => {\r\n            const { data } = await Axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = \"text/javascript\";\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setSdk(true);\r\n            };\r\n            document.body.appendChild(script);\r\n        };\r\n        if (!order || \r\n            successPay || \r\n            successDeliver || \r\n            (order && order._id !== orderId)) {\r\n            dispatch({type: ORDER_PAY_RESET});\r\n            dispatch({type: ORDER_DELIVER_RESET});\r\n            dispatch(detailsOrder(orderId));  \r\n        } else {\r\n            if (!order.isPaid) {\r\n                if (!window.paypal) {\r\n                    addPayPalScript();\r\n                } else {\r\n                    setSdk(true);\r\n                }\r\n            }            \r\n        }\r\n    }, [dispatch, order, orderId, sdk]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        alert(\"Transaction completed by \" + paymentResult);\r\n        dispatch(payOrder(order, paymentResult));\r\n    };\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order._id));\r\n    }\r\n\r\n    return loading ? <LoadingBox></LoadingBox>:\r\n        error ? <MessageBox></MessageBox> :\r\n        (\r\n        <div>\r\n            <div className=\"row top\">\r\n                <div className=\"col-2\">\r\n                    <ul>\r\n                        <li>\r\n                            <div className=\" card card-body\">\r\n                                <h2>Shipping Details</h2>\r\n                                <p>\r\n                                    <strong>Name:</strong>{order.shippingAddress.fullName} <br />\r\n                                    <strong>Address: </strong>{order.shippingAddress.address},\r\n                                    {order.shippingAddress.city},\r\n                                    {order.shippingAddress.postalCode},\r\n                                    {order.shippingAddress.country}\r\n                                </p>\r\n                                {order.isDelivered ? (\r\n                                    <MessageBox variant=\"success\">Delivered on {order.deliveredAt}</MessageBox>\r\n                                ): (\r\n                                    <MessageBox variant=\"danger\">Not Delivered</MessageBox>\r\n                                )}\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div className=\" card card-body\">\r\n                                <h2>Payment Details</h2>\r\n                                <p>\r\n                                    <strong>Method: </strong>{order.paymentMethod} \r\n                                </p>\r\n                                {order.isPaid ? (\r\n                                    <MessageBox variant=\"success\">Made the payment on {order.paidAt}</MessageBox>\r\n                                ): (\r\n                                    <MessageBox variant=\"danger\">Payment due!</MessageBox>\r\n                                )}\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div className=\" card card-body\">\r\n                                <h2>Ordered items</h2>\r\n                                <ul>\r\n                                {order.orderItems.map((item) => (\r\n                                <li key={item.product}>\r\n                                <div className=\"row\">\r\n                                <div>\r\n                                <img\r\n                                    src={item.image}\r\n                                    alt={item.name}\r\n                                    className=\"small\"\r\n                                ></img>\r\n                                </div>\r\n                                <div className=\"min-30\">\r\n                                <Link to={`/product/${item.product}`}>\r\n                                    {item.name}\r\n                                </Link>\r\n                                </div>\r\n                                <div>\r\n                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                </div>\r\n                            </div>\r\n                            </li>\r\n                        ))}\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <div className=\"col-1\">\r\n            <div className=\"card card-body\">\r\n                <ul>\r\n                    <li>\r\n                        <h2>Order Summary</h2>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"row\">\r\n                            <div>Items</div>\r\n                            <div>${order.itemsPrice.toFixed(2)}</div>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"row\">\r\n                            <div>Shipping</div>\r\n                            <div>${order.shippingPrice.toFixed(2)}</div>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"row\">\r\n                            <div>Tax</div>\r\n                            <div>${order.tax.toFixed(2)}</div>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"row\">\r\n                            <div><strong>Order Total</strong></div>\r\n                            <div>${order.totalPrice.toFixed(2)}</div>\r\n                        </div>\r\n                    </li> \r\n                    { !order.isPaid && (\r\n                        <li>\r\n                            {!sdk? (<LoadingBox></LoadingBox>):\r\n                            (\r\n                                <>\r\n                                {errorPay && (\r\n                                    <MessageBox variant=\"danger\">{errorPay}</MessageBox>\r\n                                )}\r\n                                {loadingPay && <LoadingBox></LoadingBox>}\r\n                                <PayPalButton\r\n                                    amount={order.totalPrice}\r\n                                    onSuccess={successPaymentHandler}\r\n                                ></PayPalButton>\r\n                                </>\r\n                                )}\r\n                        </li>\r\n                    )}\r\n                    {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                        <li>\r\n                            { loadingDeliver && <LoadingBox></LoadingBox>}\r\n                            { errorDeliver && <MessageBox variant=\"danger\">{errorDeliver}</MessageBox>}\r\n                            <button type=\"button\" className=\"primary block\" onClick={deliverHandler}>\r\n                                Deliver Order\r\n                            </button>\r\n                        </li>\r\n                    )}                   \r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n)\r\n}\r\n","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\OrderHistoryScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProfileScreen.js",["214"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MesssageBox from '../components/MessageBox';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\n\r\nexport default function ProfileScreen(props) {\r\n   \r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;    \r\n    \r\n    const [name, setName] = useState(userInfo.name || '');\r\n    const [email, setEmail] = useState(userInfo.email || '');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const userDetails  = useSelector((state) => state.userDetails);\r\n    //console.log(\"userDetails: \" + userDetails.user);\r\n    const { loading, error, user} = userDetails;\r\n    console.log(loading, error, user);\r\n\r\n    const userUpdateProfile  = useSelector((state) => state.userUpdateProfile);\r\n    const { success: updateSuccess, error: updateError, loading: updateLoading} = userUpdateProfile;\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {  \r\n         if (!user) {\r\n             dispatch({type: USER_UPDATE_PROFILE_RESET});\r\n            dispatch(detailsUser(userInfo._id))\r\n         }  else {\r\n             setName(user.name);\r\n             setEmail(user.email);\r\n         }  \r\n    }, [dispatch, userInfo._id], user);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // dispatch update profile\r\n        if (password !== confirmPassword) {\r\n            alert('Password and ConfirmPassword do not match');\r\n        } else {\r\n            dispatch(updateUserProfile({userId: user._id, name, email, password}));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h1>User Profile</h1>\r\n                </div>\r\n                {\r\n                    loading ? ( <LoadingBox></LoadingBox>\r\n                     ) :\r\n                    error ? ( <MesssageBox variant=\"danger\">{error}</MesssageBox>\r\n                    ) : (\r\n                    <>\r\n                    { updateLoading && <LoadingBox></LoadingBox>}\r\n                    { updateError && (<MesssageBox variant=\"danger\">{updateError}</MesssageBox> )}\r\n                    { updateSuccess && ( \r\n                        <MesssageBox variant=\"success\">\r\n                            Profile Updated Successfully.\r\n                        </MesssageBox> \r\n                    )}\r\n                    <div>\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input \r\n                            id=\"name\" \r\n                            type=\"text\"                            \r\n                            placeholder=\"Enter name\" \r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            id=\"email\" \r\n                            type=\"email\"                            \r\n                            placeholder=\"Enter email\" \r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            id=\"password\" \r\n                            type=\"password\"                            \r\n                            placeholder=\"Enter password\"\r\n                            onChange={(e) => setPassword(e.target.value)} \r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                        <input \r\n                            id=\"confirmPassword\" \r\n                            type=\"password\"                            \r\n                            placeholder=\"Enter confirm password\" \r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <label />\r\n                        <button className=\"primary\" type=\"submit\">\r\n                            Update\r\n                        </button>\r\n                    </div>\r\n                    </>\r\n                )}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\PrivateRoute.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\components\\AdminRoute.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\SearchScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\utils.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\SellerScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\components\\SellerRoute.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\UserListScreen.js",["215"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from  'react-redux';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox'\r\nimport MessageBox from '../components/MessageBox'\r\nimport { USER_DETAILS_RESET, USER_DETAILS_SUCCESS } from '../constants/userConstants';\r\n\r\nexport default function UserListScreen(props) {\r\n    const userList  = useSelector( (state) => state.userList);\r\n    const { loading, error, users} = userList;\r\n\r\n    const userDelete = useSelector(state =>  state.userDelete);\r\n    const { loading:loadingDelete,error: errorDelete, success: successDelete } = userDelete;\r\n\r\n    const  dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(listUsers());\r\n        dispatch({type: USER_DETAILS_RESET });\r\n    }, [dispatch, successDelete ]);\r\n\r\n    const deleteHandler = (user) => {\r\n    if (window.confirm('Are you sure?')) {\r\n        dispatch(deleteUser(user._id));\r\n    }\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loadingDelete && <LoadingBox></LoadingBox>}\r\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\r\n            {successDelete && <MessageBox variant=\"success\">\"User Deleted Successfully</MessageBox>}\r\n            {loading ? (<LoadingBox></LoadingBox>)\r\n            :\r\n            error ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\r\n            :\r\n            (\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>IS SELLER</th>\r\n                            <th>IS ADMIN</th>\r\n                            <th>ACTIONS</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            users && users.map((user) => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.isSeller ? 'YES': 'NO'}</td>\r\n                                    <td>{user.isAdmin ? 'YES' : 'NO' }</td>\r\n                                    <td>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"small\"\r\n                                            onClick={() => props.history.push(`/user/${user._id}/edit`)}\r\n                                        >\r\n                                            Edit\r\n                                        </button>\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            className=\"small\" \r\n                                            onClick={() => deleteHandler(user)}\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\UserEditScreen.js",["216"],"import { set } from 'mongoose';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsUser, updateUser } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox'\r\nimport MessageBox from '../components/MessageBox'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nexport default function UserEditScreen(props) {\r\n    const userId = props.match.params.id;\r\n    const [name, setName ] = useState('');\r\n    const [email, setEmail ] = useState('');\r\n    const [isSeller, setIsSeller ] = useState(false);\r\n    const [isAdmin, setIsAdmin ] = useState(false);\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const { \r\n        loading: loadingUpdate,\r\n        error: errorUpdate, \r\n        success: successUpdate \r\n    } = userUpdate;\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({type: USER_UPDATE_RESET});\r\n            props.history.push('/userlist');\r\n        }\r\n        if (!user) {\r\n            dispatch(detailsUser(userId));\r\n        } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setIsSeller(user.isSeller);\r\n            setIsAdmin(user.isAdmin);\r\n        }\r\n    }, [dispatch, userId, props.history, successUpdate, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateUser({_id: userId, name, email, isSeller, isAdmin}));\r\n    };\r\n\r\n    return (\r\n        <div>            \r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h1>Edit User { name }</h1>\r\n                </div>\r\n                {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n                { loading ? <LoadingBox></LoadingBox> :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox> :\r\n                <>\r\n                <div>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input \r\n                        id=\"name\" \r\n                        type=\"text\"\r\n                        placeholder=\"Enter name\" \r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input \r\n                        id=\"email\" \r\n                        type=\"email\"\r\n                        placeholder=\"Enter email\" \r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"isSeller\">Is Seller</label>\r\n                    <input \r\n                        id=\"isSeller\" \r\n                        type=\"checkbox\"\r\n                        checked = {isSeller}\r\n                        onChange={(e) => setIsSeller(e.target.checked)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"isAdmin\">Is Admin</label>\r\n                    <input \r\n                        id=\"isAdmin\" \r\n                        type=\"checkbox\"\r\n                        checked = {isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"primary\">\r\n                        Update\r\n                    </button>\r\n                </div>\r\n                </>\r\n            }\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n",{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"217","replacedBy":"221"},{"ruleId":"219","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":19,"column":8,"nodeType":"225","messageId":"226","endLine":19,"endColumn":19},{"ruleId":"217","replacedBy":"227"},{"ruleId":"219","replacedBy":"228"},{"ruleId":"223","severity":1,"message":"229","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":14},{"ruleId":"223","severity":1,"message":"230","line":107,"column":17,"nodeType":"225","messageId":"226","endLine":107,"endColumn":21},{"ruleId":"231","severity":1,"message":"232","line":23,"column":8,"nodeType":"233","endLine":23,"endColumn":18,"suggestions":"234"},{"ruleId":"223","severity":1,"message":"235","line":3,"column":154,"nodeType":"225","messageId":"226","endLine":3,"endColumn":169},{"ruleId":"223","severity":1,"message":"236","line":3,"column":16,"nodeType":"225","messageId":"226","endLine":3,"endColumn":24},{"ruleId":"231","severity":1,"message":"237","line":27,"column":8,"nodeType":"233","endLine":27,"endColumn":33,"suggestions":"238"},{"ruleId":"223","severity":1,"message":"239","line":115,"column":15,"nodeType":"225","messageId":"226","endLine":115,"endColumn":22},{"ruleId":"231","severity":1,"message":"240","line":56,"column":8,"nodeType":"233","endLine":56,"endColumn":39,"suggestions":"241"},{"ruleId":"231","severity":1,"message":"242","line":35,"column":8,"nodeType":"233","endLine":35,"endColumn":32,"suggestions":"243"},{"ruleId":"223","severity":1,"message":"244","line":6,"column":30,"nodeType":"225","messageId":"226","endLine":6,"endColumn":50},{"ruleId":"223","severity":1,"message":"245","line":1,"column":10,"nodeType":"225","messageId":"226","endLine":1,"endColumn":13},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],["246"],["247"],"no-unused-vars","'SellerRoute' is defined but never used.","Identifier","unusedVar",["246"],["247"],"'Link' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.","ArrayExpression",["248"],"'USER_LIST__FAIL' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'success'. Either include it or remove the dependency array.",["249"],"'message' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'successDeliver' and 'successPay'. Either include them or remove the dependency array.",["250"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["251"],"'USER_DETAILS_SUCCESS' is defined but never used.","'set' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"260","text":"261"},"Update the dependencies array to be: [props.history, success, userInfo]",{"range":"262","text":"263"},"Update the dependencies array to be: [dispatch, order, orderId, sdk, successDeliver, successPay]",{"range":"264","text":"265"},"Update the dependencies array to be: [dispatch, user, userInfo._id]",{"range":"266","text":"267"},[846,856],"[props.history, redirect, userInfo]",[1046,1071],"[props.history, success, userInfo]",[2273,2304],"[dispatch, order, orderId, sdk, successDeliver, successPay]",[1477,1501],"[dispatch, user, userInfo._id]"]