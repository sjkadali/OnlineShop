[{"C:\\Users\\skada\\online-shop\\frontend\\src\\index.js":"1","C:\\Users\\skada\\online-shop\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\skada\\online-shop\\frontend\\src\\App.js":"3","C:\\Users\\skada\\online-shop\\frontend\\src\\Screens\\HomeScreen.js":"4","C:\\Users\\skada\\online-shop\\frontend\\src\\Screens\\ProductScreen.js":"5","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProductScreen.js":"6","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\HomeScreen.js":"7","C:\\Users\\skada\\online-shop\\frontend\\src\\store.js":"8","C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\productReducers.js":"9","C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\productConstants.js":"10","C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\productActions.js":"11","C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\cartReducers.js":"12","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\CartScreen.js":"13","C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\cartConstants.js":"14","C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\cartActions.js":"15","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\SigninScreen.js":"16","C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\userReducers.js":"17","C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\userConstants.js":"18","C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\userActions.js":"19","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\RegisterScreen.js":"20","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\LoadingBox.js":"21","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\MessageBox.js":"22","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\CheckoutSteps.js":"23","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\PaymentMethodScreen.js":"24","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\PlaceOrderScreen.js":"25","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ShippingAddressScreen.js":"26","C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\orderReducers.js":"27","C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\orderConstants.js":"28","C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\orderActions.js":"29","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\OrderScreen.js":"30","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\OrderHistoryScreen.js":"31","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProfileScreen.js":"32","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\PrivateRoute.js":"33","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProductListScreen.js":"34","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\AdminRoute.js":"35","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProductEditScreen.js":"36","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\OrderListScreen.js":"37","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\SearchBox.js":"38","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\Product.js":"39","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\SearchScreen.js":"40","C:\\Users\\skada\\online-shop\\frontend\\src\\utils.js":"41","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\Rating.js":"42"},{"size":671,"mtime":1608758883957,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"44"},{"size":8216,"mtime":1611866066684,"results":"46","hashOfConfig":"44"},{"size":1207,"mtime":1608166648650,"results":"47","hashOfConfig":"44"},{"size":2036,"mtime":1608080962880,"results":"48","hashOfConfig":"44"},{"size":2766,"mtime":1608846739271,"results":"49","hashOfConfig":"44"},{"size":1162,"mtime":1611708646468,"results":"50","hashOfConfig":"44"},{"size":2104,"mtime":1611672273936,"results":"51","hashOfConfig":"44"},{"size":3442,"mtime":1611672273957,"results":"52","hashOfConfig":"44"},{"size":1360,"mtime":1611671250651,"results":"53","hashOfConfig":"44"},{"size":3980,"mtime":1611865924837,"results":"54","hashOfConfig":"44"},{"size":1218,"mtime":1610576794028,"results":"55","hashOfConfig":"44"},{"size":3511,"mtime":1610237774380,"results":"56","hashOfConfig":"44"},{"size":283,"mtime":1610550775874,"results":"57","hashOfConfig":"44"},{"size":1308,"mtime":1610397231142,"results":"58","hashOfConfig":"44"},{"size":2351,"mtime":1610634754550,"results":"59","hashOfConfig":"44"},{"size":2223,"mtime":1611181799144,"results":"60","hashOfConfig":"44"},{"size":874,"mtime":1611181799143,"results":"61","hashOfConfig":"44"},{"size":3441,"mtime":1611181799142,"results":"62","hashOfConfig":"44"},{"size":3293,"mtime":1610294564375,"results":"63","hashOfConfig":"44"},{"size":217,"mtime":1610237774384,"results":"64","hashOfConfig":"44"},{"size":215,"mtime":1610237774384,"results":"65","hashOfConfig":"44"},{"size":451,"mtime":1610376702093,"results":"66","hashOfConfig":"44"},{"size":2209,"mtime":1610400533327,"results":"67","hashOfConfig":"44"},{"size":5913,"mtime":1610577812145,"results":"68","hashOfConfig":"44"},{"size":4077,"mtime":1610635387626,"results":"69","hashOfConfig":"44"},{"size":3669,"mtime":1611586229854,"results":"70","hashOfConfig":"44"},{"size":1447,"mtime":1611586229854,"results":"71","hashOfConfig":"44"},{"size":5563,"mtime":1611586229853,"results":"72","hashOfConfig":"44"},{"size":8548,"mtime":1611586229851,"results":"73","hashOfConfig":"44"},{"size":2563,"mtime":1611023160777,"results":"74","hashOfConfig":"44"},{"size":4826,"mtime":1611586229852,"results":"75","hashOfConfig":"44"},{"size":571,"mtime":1611181799142,"results":"76","hashOfConfig":"44"},{"size":4304,"mtime":1611696675134,"results":"77","hashOfConfig":"44"},{"size":589,"mtime":1611459784318,"results":"78","hashOfConfig":"44"},{"size":7676,"mtime":1611459784317,"results":"79","hashOfConfig":"44"},{"size":3434,"mtime":1611586229851,"results":"80","hashOfConfig":"44"},{"size":763,"mtime":1611603778688,"results":"81","hashOfConfig":"44"},{"size":921,"mtime":1611864567202,"results":"82","hashOfConfig":"44"},{"size":6295,"mtime":1611865461213,"results":"83","hashOfConfig":"44"},{"size":579,"mtime":1611863874992,"results":"84","hashOfConfig":"44"},{"size":2207,"mtime":1611785306495,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"wpy8f0",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Users\\skada\\online-shop\\frontend\\src\\index.js",[],["181","182"],"C:\\Users\\skada\\online-shop\\frontend\\src\\reportWebVitals.js",[],["183","184"],"C:\\Users\\skada\\online-shop\\frontend\\src\\App.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\Screens\\HomeScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\Screens\\ProductScreen.js",[],["185","186"],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProductScreen.js",["187"],"import { useSelector, useDispatch } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { detailsProduct } from '../actions/productActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ProductScreen(props) {\r\n    const [qty, setQty] = useState(1);\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const { product, loading, error } = productDetails;\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        dispatch(detailsProduct(props.match.params.id));\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const handleAddToCart = () => {\r\n        props.history.push(\"/cart/\" +props.match.params.id + \"?qty=\" +qty)\r\n    }\r\n\r\n    return <div>\r\n        <div className=\"back-to-products\">\r\n            <Link to=\"/\">Back to Products</Link>\r\n        </div>\r\n        { loading? <div>Loading.... </div>:\r\n        error? <div>{error}</div>: \r\n        <div className=\"details\">\r\n            <div className=\"details-image\">\r\n                <img src={product.image} alt=\"product\" ></img>\r\n            </div>\r\n            <div className=\"details-info\">\r\n                <ul>\r\n                    <li>\r\n                        <h4>{product.name}</h4>\r\n                    </li>\r\n                    <li>\r\n                        {product.rating} Stars ({product.numReviews} Reviews)\r\n                    </li>\r\n                    <li>\r\n                        Price: <b>${product.price}</b>\r\n                    </li>\r\n                    <li>\r\n                        Description: \r\n                        <div>\r\n                        {product.description}  \r\n                        </div> \r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"details-action\">\r\n                <ul>\r\n                    <li>\r\n                        Price: {product.price}\r\n                    </li>\r\n                    <li>\r\n                        Status: {product.qtyInStock > 0 ? \"In Stock\": \"Out of Stock!!\"}\r\n                    </li>\r\n                    <li>\r\n                        Quantity: <select value={qty} onChange={ (e) => { setQty(e.target.value);}}>\r\n                          {[...Array(product.qtyInStock).keys()].map(x =>\r\n                            <option key={x+1} value={x+1}>{x+1} </option>\r\n                          )}                            \r\n                        </select>\r\n                    </li>\r\n                    <li>\r\n                        {product.qtyInStock > 0 && <button onClick={handleAddToCart} className=\"button\">Add to Cart</button>}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default ProductScreen;","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\HomeScreen.js",["188","189"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts } from '../actions/productActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Product from '../components/Product';\r\n\r\nfunction HomeScreen() {\r\n\r\n  const productList = useSelector(state => state.productList);\r\n  const { products, loading, error } = productList;\r\n const dispatch = useDispatch();\r\n  useEffect(() => {    \r\n    dispatch(listProducts({}));   \r\n  }, [dispatch]);\r\n    return (  \r\n      <div>\r\n          {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <>\r\n          {products.length === 0 && <MessageBox>No Product Found</MessageBox>}\r\n          <div className=\"row center\">\r\n            {products.map((product) => (\r\n              <Product key={product._id} product={product}></Product>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n      </div>   \r\n    )\r\n}\r\nexport default HomeScreen;","C:\\Users\\skada\\online-shop\\frontend\\src\\store.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\productActions.js",["190"],"C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\CartScreen.js",["191"],"import React, { useEffect } from 'react';\r\nimport { addToCart } from '../actions/cartActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { removeFromCart } from '../actions/cartActions';\r\n\r\nfunction CartScreen(props) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const {cartItems} = cart;\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]):1;\r\n    const dispatch = useDispatch();\r\n    const removeFromCartHandler =  (productId) => {\r\n        dispatch(removeFromCart(productId));\r\n    }\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, []);\r\n\r\n    const checkoutHandler = () => {\r\n        props.history.push(\"/signin?redirect=shipping\");\r\n    }\r\n\r\n    return <div className=\"cart\">\r\n        <div className=\"cart-list\">\r\n            <ul className=\"cart-list-container\">\r\n                <li>\r\n                    <h3>\r\n                        Shopping Cart\r\n                    </h3>\r\n                    <div>\r\n                        price\r\n                    </div>\r\n                </li>\r\n                {\r\n                    cartItems.length === 0 ?\r\n                    <div>\r\n                        Cart is empty!\r\n                    </div>\r\n                    : \r\n                    cartItems.map( item => \r\n                       <li> \r\n                            <div className=\"cart-image\">\r\n                                <img src={item.image} alt=\"product\" />\r\n                            </div>\r\n                            <div className=\"cart-name\">\r\n                                <div>\r\n                                    <Link to={\"/product/\" +item.product }>\r\n                                        {item.name}\r\n                                    </Link>\r\n                                </div>\r\n                                <div>\r\n                                    Qty:\r\n                                    <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                    </select>\r\n                                    <button type=\"button\" className=\"button\" onClick={() => removeFromCartHandler(item.product)}>\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                                </div>\r\n                                <div>                   <div>\r\n                                    {item.price}\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </div>\r\n        <div className=\"cart-action\">\r\n            <h3>\r\n                Subtotal ( {cartItems.reduce((a, c) => a + c.qty, 0)} items)\r\n                :\r\n                $ {cartItems.reduce((a, c) => a+ c.price * c.qty, 0)}\r\n            </h3>\r\n            <button onClick={checkoutHandler} className=\"button primary full-width\" disabled={cartItems.length === 0}>\r\n                Proceed to Checkout\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default CartScreen;","C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\SigninScreen.js",["192"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { signin } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nfunction SigninScreen(props) {    \r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const userSignin = useSelector(state => state.userSignin );\r\n    const { loading, userInfo, error} = userSignin;\r\n\r\n    const dispatch = useDispatch();\r\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            props.history.push(redirect);\r\n        }\r\n        return () => {\r\n            //\r\n        };\r\n    }, [userInfo]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin(email, password));\r\n    }\r\n\r\n    return <div>\r\n        <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h2>Sign-In</h2>\r\n                </div>\r\n                    {loading && <LoadingBox></LoadingBox>}\r\n                    {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                <div>\r\n                    <label htmlFor=\"email\">\r\n                        Email\r\n                    </label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={ (e) => setEmail(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">\r\n                        Password\r\n                    </label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"button primary\" >Signin</button>\r\n                </div>\r\n                <div>\r\n                    New to online-shop?\r\n                </div>\r\n                <div>\r\n                    <Link to={`/register?redirect=${redirect}`} className=\"button secondary text-center\">Register</Link>\r\n                </div>            \r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default SigninScreen;","C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\components\\LoadingBox.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\components\\MessageBox.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\PaymentMethodScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ShippingAddressScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\actions\\orderActions.js",["193"],"import Axios from \"axios\";\r\nimport { CART_EMPTY } from \"../constants/cartConstants\";\r\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL\r\n    , ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\r\n     ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL,\r\n     ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,\r\n     ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL,\r\n     ORDERS_LIST_REQUEST, ORDERS_LIST_SUCCESS, ORDERS_LIST_FAIL,\r\n     ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL } from '../constants/orderConstants';\r\n\r\nexport const createOrder = (order ) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_CREATE_REQUEST, payload: order});\r\n    try {\r\n        const { userSignin: {userInfo}} = getState();\r\n        console.log(\"order, order action: \"+ order, userInfo.token);\r\n        const { data } = await Axios.post('/api/orders',order, {\r\n            headers: {\r\n                'Authorization': `Bearer ${userInfo.token}`,\r\n            }, \r\n        });\r\n        console.log(\"order data: \"+ data);\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\r\n        dispatch({ type: CART_EMPTY});\r\n        localStorage.removeItem('cartItems');\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_DETAILS_REQUEST, payload: orderId});\r\n    const { userSignin: {userInfo}} = getState();\r\n    console.log(\"userInfo: \"+ userInfo);\r\n    try {\r\n        const { data } = await Axios.get(`/api/orders/${orderId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n        dispatch({type: ORDER_DETAILS_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({type: ORDER_DETAILS_FAIL, payload: message});\r\n    }\r\n};\r\n\r\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_PAY_REQUEST, payload: {order, paymentResult}});\r\n    const { userSignin: { userInfo }} = getState();\r\n    try {\r\n        const { data } = await Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({type: ORDER_PAY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({type: ORDER_PAY_FAIL, payload: message});\r\n    }\r\n};\r\n\r\nexport const listOrder = () => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_LIST_REQUEST});\r\n    const { userSignin: {userInfo}} = getState();\r\n    try {\r\n        const { data } = await Axios.get('/api/orders/user', {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({type: ORDER_LIST_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({type: ORDER_LIST_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async ( dispatch, getState ) => {\r\n    dispatch({ type: ORDERS_LIST_REQUEST});\r\n    const { userSignin: { userInfo }} = getState();\r\n    try {\r\n        const { data } = await Axios.get('/api/orders', {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n        dispatch({type: ORDERS_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({type: ORDERS_LIST_FAIL, message});\r\n    }\r\n}\r\n\r\nexport const deleteOrder = (orderId) => async ( dispatch, getState) => {\r\n    dispatch({ type: ORDER_DELETE_REQUEST})\r\n    const { userSignin: { userInfo }} = getState();    \r\n    try {\r\n        const { data } = await Axios.delete(`/api/orders/${orderId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n        dispatch({ type: ORDER_DELETE_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n            dispatch({type: ORDER_DELETE_FAIL});\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_DELIVER_REQUEST, payload: {orderId}});\r\n    const { userSignin: { userInfo }} = getState();\r\n\r\n    try {\r\n        const { data } = await Axios.put(`/api/orders/${orderId}/deliver`, {}, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({type: ORDER_DELIVER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({type: ORDER_DELIVER_FAIL, payload: message});\r\n    }\r\n};\r\n","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\OrderScreen.js",["194"],"import Axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { detailsOrder, payOrder, deliverOrder } from '../actions/orderActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET } from '../constants/orderConstants';\r\n\r\nexport default function OrderScreen(props) {\r\n    const orderId = props.match.params.id;\r\n    const [sdk, setSdk] = useState(false);\r\n    const orderDetails = useSelector((state) => state.orderDetails);\r\n    const { order, loading, error} = orderDetails;\r\n    \r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const orderPay = useSelector(state => state.orderPay);\r\n    const { loading: loadingPay, error: errorPay, success: successPay} = orderPay;\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver);\r\n    const { loading: loadingDeliver, error: errorDeliver, success: successDeliver} = orderDeliver\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        const addPayPalScript = async () => {\r\n            const { data } = await Axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = \"text/javascript\";\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setSdk(true);\r\n            };\r\n            document.body.appendChild(script);\r\n        };\r\n        if (!order || \r\n            successPay || \r\n            successDeliver || \r\n            (order && order._id !== orderId)) {\r\n            dispatch({type: ORDER_PAY_RESET});\r\n            dispatch({type: ORDER_DELIVER_RESET});\r\n            dispatch(detailsOrder(orderId));  \r\n        } else {\r\n            if (!order.isPaid) {\r\n                if (!window.paypal) {\r\n                    addPayPalScript();\r\n                } else {\r\n                    setSdk(true);\r\n                }\r\n            }            \r\n        }\r\n    }, [dispatch, order, orderId, sdk]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        alert(\"Transaction completed by \" + paymentResult);\r\n        dispatch(payOrder(order, paymentResult));\r\n    };\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order._id));\r\n    }\r\n\r\n    return loading ? <LoadingBox></LoadingBox>:\r\n        error ? <MessageBox></MessageBox> :\r\n        (\r\n        <div>\r\n            <div className=\"row top\">\r\n                <div className=\"col-2\">\r\n                    <ul>\r\n                        <li>\r\n                            <div className=\" card card-body\">\r\n                                <h2>Shipping Details</h2>\r\n                                <p>\r\n                                    <strong>Name:</strong>{order.shippingAddress.fullName} <br />\r\n                                    <strong>Address: </strong>{order.shippingAddress.address},\r\n                                    {order.shippingAddress.city},\r\n                                    {order.shippingAddress.postalCode},\r\n                                    {order.shippingAddress.country}\r\n                                </p>\r\n                                {order.isDelivered ? (\r\n                                    <MessageBox variant=\"success\">Delivered on {order.deliveredAt}</MessageBox>\r\n                                ): (\r\n                                    <MessageBox variant=\"danger\">Not Delivered</MessageBox>\r\n                                )}\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div className=\" card card-body\">\r\n                                <h2>Payment Details</h2>\r\n                                <p>\r\n                                    <strong>Method: </strong>{order.paymentMethod} \r\n                                </p>\r\n                                {order.isPaid ? (\r\n                                    <MessageBox variant=\"success\">Made the payment on {order.paidAt}</MessageBox>\r\n                                ): (\r\n                                    <MessageBox variant=\"danger\">Payment due!</MessageBox>\r\n                                )}\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div className=\" card card-body\">\r\n                                <h2>Ordered items</h2>\r\n                                <ul>\r\n                                {order.orderItems.map((item) => (\r\n                                <li key={item.product}>\r\n                                <div className=\"row\">\r\n                                <div>\r\n                                <img\r\n                                    src={item.image}\r\n                                    alt={item.name}\r\n                                    className=\"small\"\r\n                                ></img>\r\n                                </div>\r\n                                <div className=\"min-30\">\r\n                                <Link to={`/product/${item.product}`}>\r\n                                    {item.name}\r\n                                </Link>\r\n                                </div>\r\n                                <div>\r\n                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                </div>\r\n                            </div>\r\n                            </li>\r\n                        ))}\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <div className=\"col-1\">\r\n            <div className=\"card card-body\">\r\n                <ul>\r\n                    <li>\r\n                        <h2>Order Summary</h2>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"row\">\r\n                            <div>Items</div>\r\n                            <div>${order.itemsPrice.toFixed(2)}</div>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"row\">\r\n                            <div>Shipping</div>\r\n                            <div>${order.shippingPrice.toFixed(2)}</div>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"row\">\r\n                            <div>Tax</div>\r\n                            <div>${order.tax.toFixed(2)}</div>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"row\">\r\n                            <div><strong>Order Total</strong></div>\r\n                            <div>${order.totalPrice.toFixed(2)}</div>\r\n                        </div>\r\n                    </li> \r\n                    { !order.isPaid && (\r\n                        <li>\r\n                            {!sdk? (<LoadingBox></LoadingBox>):\r\n                            (\r\n                                <>\r\n                                {errorPay && (\r\n                                    <MessageBox variant=\"danger\">{errorPay}</MessageBox>\r\n                                )}\r\n                                {loadingPay && <LoadingBox></LoadingBox>}\r\n                                <PayPalButton\r\n                                    amount={order.totalPrice}\r\n                                    onSuccess={successPaymentHandler}\r\n                                ></PayPalButton>\r\n                                </>\r\n                                )}\r\n                        </li>\r\n                    )}\r\n                    {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                        <li>\r\n                            { loadingDeliver && <LoadingBox></LoadingBox>}\r\n                            { errorDeliver && <MessageBox variant=\"danger\">{errorDeliver}</MessageBox>}\r\n                            <button type=\"button\" className=\"primary block\" onClick={deliverHandler}>\r\n                                Deliver Order\r\n                            </button>\r\n                        </li>\r\n                    )}                   \r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n)\r\n}\r\n","C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\OrderHistoryScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProfileScreen.js",["195"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MesssageBox from '../components/MessageBox';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\n\r\nexport default function ProfileScreen(props) {\r\n   \r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;    \r\n    \r\n    const [name, setName] = useState(userInfo.name || '');\r\n    const [email, setEmail] = useState(userInfo.email || '');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const userDetails  = useSelector((state) => state.userDetails);\r\n    //console.log(\"userDetails: \" + userDetails.user);\r\n    const { loading, error, user} = userDetails;\r\n    console.log(loading, error, user);\r\n\r\n    const userUpdateProfile  = useSelector((state) => state.userUpdateProfile);\r\n    const { success: updateSuccess, error: updateError, loading: updateLoading} = userUpdateProfile;\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {  \r\n         if (!user) {\r\n             dispatch({type: USER_UPDATE_PROFILE_RESET});\r\n            dispatch(detailsUser(userInfo._id))\r\n         }  else {\r\n             setName(user.name);\r\n             setEmail(user.email);\r\n         }  \r\n    }, [dispatch, userInfo._id], user);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // dispatch update profile\r\n        if (password !== confirmPassword) {\r\n            alert('Password and ConfirmPassword do not match');\r\n        } else {\r\n            dispatch(updateUserProfile({userId: user._id, name, email, password}));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h1>User Profile</h1>\r\n                </div>\r\n                {\r\n                    loading ? ( <LoadingBox></LoadingBox>\r\n                     ) :\r\n                    error ? ( <MesssageBox variant=\"danger\">{error}</MesssageBox>\r\n                    ) : (\r\n                    <>\r\n                    { updateLoading && <LoadingBox></LoadingBox>}\r\n                    { updateError && (<MesssageBox variant=\"danger\">{updateError}</MesssageBox> )}\r\n                    { updateSuccess && ( \r\n                        <MesssageBox variant=\"success\">\r\n                            Profile Updated Successfully.\r\n                        </MesssageBox> \r\n                    )}\r\n                    <div>\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input \r\n                            id=\"name\" \r\n                            type=\"text\"                            \r\n                            placeholder=\"Enter name\" \r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            id=\"email\" \r\n                            type=\"email\"                            \r\n                            placeholder=\"Enter email\" \r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            id=\"password\" \r\n                            type=\"password\"                            \r\n                            placeholder=\"Enter password\"\r\n                            onChange={(e) => setPassword(e.target.value)} \r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                        <input \r\n                            id=\"confirmPassword\" \r\n                            type=\"password\"                            \r\n                            placeholder=\"Enter confirm password\" \r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <label />\r\n                        <button className=\"primary\" type=\"submit\">\r\n                            Update\r\n                        </button>\r\n                    </div>\r\n                    </>\r\n                )}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\PrivateRoute.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProductListScreen.js",["196"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createProduct, listProducts, deleteProduct } from '../actions/productActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { PRODUCT_CREATE_RESET, PRODUCT_DELETE_RESET } from '../constants/productConstants';\r\n\r\nexport default function ProductListScreen(props) {\r\n    const productList = useSelector(state=> state.productList);\r\n    console.log(\"productList: \"+productList);\r\n    const { loading, error, products} = productList;\r\n    console.log(\"loading , error, products: \"+loading, error, products);\r\n\r\n    const productCreate = useSelector(state => state.productCreate);\r\n    const { \r\n        loading: loadingCreate, \r\n        error: errorCreate, \r\n        success: successCreate, \r\n        product: createdProduct\r\n    } = productCreate;\r\n    const productDelete = useSelector(state => state.productDelete);\r\n    const { \r\n        loading: loadingDelete, \r\n        error: errorDelete, \r\n        success: successDelete,          \r\n    } = productDelete;\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (successCreate) {\r\n            dispatch({type: PRODUCT_CREATE_RESET});\r\n            props.history.push('/productlist');\r\n        }\r\n        if (successDelete) {\r\n            dispatch({type: PRODUCT_DELETE_RESET})\r\n        }    \r\n        dispatch(listProducts({}));        \r\n      }, [createdProduct, dispatch, props.history, successCreate, productDelete]);\r\n\r\n    const deleteHandler = (product) => {\r\n        if (window.confirm('Are you sure to delete this product?')) {\r\n            dispatch(deleteProduct(product._id));\r\n        }\r\n    }\r\n    const createHandler = () => {\r\n        dispatch(createProduct());\r\n    }    \r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <h1>Products</h1>\r\n                <button type=\"button\" className=\"primary\" onClick={createHandler}>\r\n                    Create Product\r\n                </button>\r\n            </div>\r\n            {loadingDelete && <LoadingBox></LoadingBox>}\r\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\r\n            {loadingCreate && <LoadingBox></LoadingBox>}\r\n            {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n            {loading ? (\r\n                <LoadingBox></LoadingBox>\r\n            ) : error ? (\r\n                <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            ) : (\r\n                <>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>NAME</th>\r\n                        <th>PRICE</th>\r\n                        <th>CATEGORY</th>\r\n                        <th>BRAND</th>\r\n                        <th>ACTIONS</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {products.map((product) => (\r\n                        <tr key={product._id}>\r\n                        <td>{product._id}</td>\r\n                        <td>{product.name}</td>\r\n                        <td>{product.price}</td>\r\n                        <td>{product.category}</td>\r\n                        <td>{product.brand}</td>\r\n                        <td>\r\n                            <button\r\n                            type=\"button\"\r\n                            className=\"small\"\r\n                            onClick={() =>\r\n                                props.history.push(`/product/${product._id}/edit`)\r\n                            }\r\n                            >\r\n                            Edit\r\n                            </button>\r\n                            <button\r\n                            type=\"button\"\r\n                            className=\"small\"\r\n                            onClick={() => deleteHandler(product)}\r\n                            >\r\n                            Delete\r\n                            </button>\r\n                        </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n                </>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\skada\\online-shop\\frontend\\src\\components\\AdminRoute.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\screens\\SearchScreen.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\utils.js",[],"C:\\Users\\skada\\online-shop\\frontend\\src\\components\\Rating.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"197","replacedBy":"201"},{"ruleId":"199","replacedBy":"202"},{"ruleId":"197","replacedBy":"203"},{"ruleId":"199","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":17,"column":8,"nodeType":"207","endLine":17,"endColumn":10,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":14},{"ruleId":"209","severity":1,"message":"213","line":3,"column":10,"nodeType":"211","messageId":"212","endLine":3,"endColumn":22},{"ruleId":"209","severity":1,"message":"214","line":93,"column":17,"nodeType":"211","messageId":"212","endLine":93,"endColumn":21},{"ruleId":"205","severity":1,"message":"215","line":22,"column":8,"nodeType":"207","endLine":22,"endColumn":10,"suggestions":"216"},{"ruleId":"205","severity":1,"message":"217","line":23,"column":8,"nodeType":"207","endLine":23,"endColumn":18,"suggestions":"218"},{"ruleId":"209","severity":1,"message":"219","line":115,"column":15,"nodeType":"211","messageId":"212","endLine":115,"endColumn":22},{"ruleId":"205","severity":1,"message":"220","line":56,"column":8,"nodeType":"207","endLine":56,"endColumn":39,"suggestions":"221"},{"ruleId":"205","severity":1,"message":"222","line":35,"column":8,"nodeType":"207","endLine":35,"endColumn":32,"suggestions":"223"},{"ruleId":"205","severity":1,"message":"224","line":38,"column":10,"nodeType":"207","endLine":38,"endColumn":81,"suggestions":"225"},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],["226"],["227"],["226"],["227"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["228"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'shallowEqual' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'productId', and 'qty'. Either include them or remove the dependency array.",["229"],"React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["230"],"'message' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'successDeliver' and 'successPay'. Either include them or remove the dependency array.",["231"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["232"],"React Hook useEffect has a missing dependency: 'successDelete'. Either include it or remove the dependency array.",["233"],"no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"246","text":"247"},"Update the dependencies array to be: [dispatch, productId, qty]",{"range":"248","text":"249"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"250","text":"251"},"Update the dependencies array to be: [dispatch, order, orderId, sdk, successDeliver, successPay]",{"range":"252","text":"253"},"Update the dependencies array to be: [dispatch, user, userInfo._id]",{"range":"254","text":"255"},"Update the dependencies array to be: [createdProduct, dispatch, props.history, successCreate, productDelete, successDelete]",{"range":"256","text":"257"},[600,602],"[dispatch, props.match.params.id]",[764,766],"[dispatch, productId, qty]",[846,856],"[props.history, redirect, userInfo]",[2273,2304],"[dispatch, order, orderId, sdk, successDeliver, successPay]",[1477,1501],"[dispatch, user, userInfo._id]",[1492,1563],"[createdProduct, dispatch, props.history, successCreate, productDelete, successDelete]"]